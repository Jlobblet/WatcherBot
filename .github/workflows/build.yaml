name: Build
on:
  push:
    tags:
      - "v*"
jobs:
  build:
    env:
      DOTNET_CLI_TELEMETRY_OPTOUT: 1
      DOTNET_SKIP_FIRST_TIME_EXPERIENCE: 1
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up .NET SDK
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: "5.0.x"
      - name: Install dependencies
        run: dotnet restore
      - name: Build Linux
        run: dotnet publish --configuration Release --no-restore --self-contained --runtime linux-arm --output "./build_output"
      - name: Zip binary
        id: zip_binary
        run: |
          cd "./build_output"
          tar cfJ Bot600.tar.xz *
          echo "::set-output name=binary_path::$(readlink -f Bot600.tar.xz)"
      - name: Create release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: ${{ github.ref }}
      - name: Upload binary
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ${{ steps.zip_binary.outputs.binary_path }}
          asset_name: Bot600.tar.xz
          asset_content_type: application/zip
